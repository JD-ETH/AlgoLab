//============================================================================
// Name        : bonus.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================


// The forward way is a easy DP, what is the return?
// Same thing pretend to solve twice in parallel

// Every Step: x+y  The distance traveled in total
// two choices: x1, x2 The movement in x direction

#include <iostream>
#include <vector>
using namespace std;
typedef vector<vector<vector<int> > > mat3d;
mat3d memo;

int solve(const vector<vector<int> > & data, int d, int x1, int x2){
	if (memo[d][x1][x2]== -1){ // never calculated
		// The solution will be the choise of this current step
		int down1=data[x1][d+1-x1];
		int down2=data[x2][d+1-x2];
		int right1=data[x1+1][d-x1];
		int right2 = data[x2+1][d-x2];
		// Four options:
		int res = max (solve(data,d+1,x1,x2)+add_if_different(down1,right1), // x1 x2 remains


		memo[d][x1][x2]=res;
		return res;
	}

	else return memo[d][x1][x2];
}
void do_case(){
	int n;
	cin >> n;
	vector<vector<int> > original(n,vector<int>(n,0));
	for (int i = 0; i < n ; i ++){
		for (int j = 0; j< n; j++){
			cin >> original[i][j];
		}
	}
	memo = mat3d(2*n-1, vector<vector<int> >(n,vector<int>(n,-1)));

	cout << solve(original, 0, 0, 0) << endl;
}

int main() {

	int t;
	cin >> t;
	while(t--){
		do_case();
	}

	return 0;
}
